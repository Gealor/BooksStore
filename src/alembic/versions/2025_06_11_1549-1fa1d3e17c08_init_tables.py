"""init_tables

Revision ID: 1fa1d3e17c08
Revises:
Create Date: 2025-06-11 15:49:54.702853

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "1fa1d3e17c08"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "books",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("author", sa.String(), nullable=False),
        sa.Column("publication_year", sa.Integer(), nullable=True),
        sa.Column("ISBN", sa.String(), nullable=True),
        sa.Column("number_copies", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.CheckConstraint(
            "number_copies >= 0", name=op.f("ck_books_check_number_copies")
        ),
        sa.CheckConstraint(
            "publication_year > 0 AND publication_year < EXTRACT(YEAR FROM CURRENT_DATE)+1",
            name=op.f("ck_books_check_publication_year_range"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_books")),
        sa.UniqueConstraint("ISBN", name=op.f("uq_books_ISBN")),
    )
    op.create_table(
        "users",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("email", name=op.f("uq_users_email")),
    )
    op.create_table(
        "borrowed_books",
        sa.Column("book_id", sa.Integer(), nullable=False),
        sa.Column("reader_id", sa.Integer(), nullable=False),
        sa.Column("return_date", sa.DateTime(), nullable=True),
        sa.Column(
            "borrow_date",
            sa.DateTime(),
            server_default="now()",
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["books.id"],
            name=op.f("fk_borrowed_books_book_id_books"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["reader_id"],
            ["users.id"],
            name=op.f("fk_borrowed_books_reader_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_borrowed_books")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("borrowed_books")
    op.drop_table("users")
    op.drop_table("books")
    # ### end Alembic commands ###
